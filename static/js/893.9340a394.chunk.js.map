{"version":3,"file":"static/js/893.9340a394.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MovieInfoContainer = styled.div`\n  margin-top: 16px;\n  display: flex;\n`;\n\nexport const MovieInfoWrapper = styled.div`\n  margin-left: 16px;\n`;\n\nexport const MovieInfoTitle = styled.h1`\n  font-size: 28px;\n  font-weight: 700;\n  margin-bottom: 16px;\n`;\n\nexport const MovieInfoSubTitle = styled.p`\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 16px;\n`;\n\nexport const MovieInfoDetails = styled.p`\n  font-size: 16px;\n  margin-bottom: 16px;\n  line-height: 1.5;\n`;","import PropTypes from 'prop-types';\nimport {\n    MovieInfoContainer,\n    MovieInfoWrapper,\n    MovieInfoTitle,\n    MovieInfoSubTitle,\n    MovieInfoDetails,\n} from './MovieInfo.styled';\n\nimport noImg from '../Image/no-img.jpg';\n\n\nexport const MovieInfo = ({ info }) => {\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = info;\n   console.log(info);\n\n  const baseURL = 'https://image.tmdb.org/t/p/w200';\n\n  const getYear = () => new Date(`${release_date}`).getFullYear();\n  const getScore = () => Math.round(`${vote_average}` * 10);\n\n  return (\n    <MovieInfoContainer>\n       <img\n        src={poster_path ? `${baseURL}${poster_path}` : noImg}\n        alt={original_title}\n        width=\"200\"\n      />\n      <MovieInfoWrapper>\n        <MovieInfoTitle>\n          {original_title} ({getYear()})\n        </MovieInfoTitle>\n        <MovieInfoDetails>User Score : {getScore()}%</MovieInfoDetails>\n        <MovieInfoSubTitle>Overview </MovieInfoSubTitle>\n        <MovieInfoDetails>{overview}</MovieInfoDetails>\n        <MovieInfoSubTitle>Genres</MovieInfoSubTitle>\n        <MovieInfoDetails>\n          {genres.map(genre => genre.name).join(', ')}\n        </MovieInfoDetails>\n      </MovieInfoWrapper>\n    </MovieInfoContainer>\n  );\n};\n\nMovieInfo.propTypes = {\n  original_title: PropTypes.string,\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n    })\n  ),\n  overview: PropTypes.string,\n  poster_path: PropTypes.string,\n  vote_average: PropTypes.number,\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.section`\n  padding: 16px 28px;\n`;\n\nexport const LinkButton = styled(Link)`\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  font-size: 15px;\n  color: black;\n  border: 2px solid black;\n  border-radius: 50px;\n  padding: 5px 8px;\n  :hover {\n    color: blueviolet;\n  }\n`;\n\nexport const AddInfo = styled.div`\n  margin-top: 16px;\n`;\n\nexport const AddInfoTitle = styled.p`\n  font-size: 16px;\n`;\n\nexport const AddInfoItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const AddInfoWrapper = styled.div`\n  padding: 16px;\n`;\n\nexport const AddInfoItemLink = styled(Link)`\n  color: red;\n  :hover {\n    color: blueviolet;\n  }\n`;","import { useEffect, useState } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport { Suspense } from 'react';\nimport { MovieInfo } from '../../components/MovieInfo/MovieInfo'\nimport {\n  Container,\n  LinkButton,\n  AddInfo,\n  AddInfoTitle,\n  AddInfoItem,\n  AddInfoWrapper,\n  AddInfoItemLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(setMovie)\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  const from = location.state?.from ?? '/';\n\n  return (\n    <>\n      {movie && (\n        <Container>\n          <LinkButton to={from}>Go back</LinkButton>\n          <MovieInfo info={movie}></MovieInfo>\n          <AddInfo>\n            <AddInfoTitle> Additional information</AddInfoTitle>\n            <AddInfoWrapper>\n              <ul>\n                <AddInfoItem>\n                  <AddInfoItemLink to=\"cast\" state={{ from }}>\n                    Cast\n                  </AddInfoItemLink>\n                </AddInfoItem>\n                <AddInfoItem>\n                  <AddInfoItemLink to=\"reviews\" state={{ from }}>\n                    Reviews\n                  </AddInfoItemLink>\n                </AddInfoItem>\n              </ul>\n            </AddInfoWrapper>\n            <Suspense fallback={<div>Loading...</div>}>\n              <Outlet />\n            </Suspense>\n          </AddInfo>\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: 'd2d971f07eb4244bef9c04c57e6caf75',\n    language: 'en-US',\n};\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`/trending/movie/day`);\n    return response.data.results;\n};\n\nexport const searchMovie = async query => {\n    const response = await axios.get(`/search/movie?query=${query}`);\n    return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n    const response = await axios.get(`/movie/${movieId}`);\n    console.log(response);\n    return response.data;\n   \n};\n\nexport const getMovieCast= async movieId => {\n    const response = await axios.get(`/movie/${movieId}/credits`);\n    return response.data.cast;\n};\n\nexport const getMovieReviews  = async movieId => {\n    const response = await axios.get(`/movie/${movieId}/reviews`);\n    return response.data.results;\n};"],"names":["MovieInfoContainer","styled","MovieInfoWrapper","MovieInfoTitle","MovieInfoSubTitle","MovieInfoDetails","MovieInfo","info","poster_path","original_title","release_date","vote_average","overview","genres","console","log","src","noImg","alt","width","Date","getFullYear","Math","round","map","genre","name","join","Container","LinkButton","Link","AddInfo","AddInfoTitle","AddInfoItem","AddInfoWrapper","AddInfoItemLink","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","getMovieDetails","then","catch","error","from","state","to","Suspense","fallback","axios","api_key","language","getTrendingMovies","response","data","results","searchMovie","query","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}