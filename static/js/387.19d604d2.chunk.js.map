{"version":3,"file":"static/js/387.19d604d2.chunk.js","mappings":"iPAEaA,EAAWC,EAAAA,EAAAA,GAAH,+DAKRC,EAAWD,EAAAA,EAAAA,EAAH,8D,kBCoCrB,EArCa,WACZ,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OANAE,EAAAA,EAAAA,YAAU,YACTC,EAAAA,EAAAA,IAAaH,GACZI,KAAKL,GACLM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACZ,GAAE,CAACN,IAEgB,IAAhBF,EAAKW,OACD,qDAIJ,+BACA,wBACEX,EAAKY,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GAC1C,OACE,UAACpB,EAAD,YACG,gBACGqB,IAAKJ,EAAY,UAnBhB,mCAmBgB,OAAgBA,GAAiBK,EAClDC,IAAI,GACJC,MAAM,SAER,SAACtB,EAAD,UAAWgB,KACX,UAAChB,EAAD,yBAAsBiB,OAPXC,EAUlB,OAIN,C,+LCvCDK,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACpBC,QAAS,mCACTC,SAAU,SAGP,IAAMC,EAAiB,mCAAG,oGACNH,EAAAA,EAAAA,IAAA,uBADM,cACvBI,EADuB,OAE7BhB,QAAQC,IAAIe,GAFiB,kBAGtBA,EAASC,KAAKC,SAHQ,2CAAH,qDAMjBC,EAAW,mCAAG,WAAMC,GAAN,uFACAR,EAAAA,EAAAA,IAAA,8BAAiCQ,IADjC,cACjBJ,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,sDAKXG,EAAe,mCAAG,WAAM5B,GAAN,uFACJmB,EAAAA,EAAAA,IAAA,iBAAoBnB,IADhB,cACrBuB,EADqB,OAE3BhB,QAAQC,IAAIe,GAFe,kBAGpBA,EAASC,MAHW,2CAAH,sDAOfrB,EAAY,mCAAE,WAAMH,GAAN,uFACAmB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,aADA,cACjBuB,EADiB,yBAEhBA,EAASC,KAAK1B,MAFE,2CAAF,sDAKZ+B,EAAe,mCAAI,WAAM7B,GAAN,uFACLmB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,aADK,cACtBuB,EADsB,yBAErBA,EAASC,KAAKC,SAFO,2CAAJ,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastItem = styled.li`\n margin-bottom: 30px;\n width: 200px;\n`;\n\nexport const CastInfo = styled.p`\n margin-top: 10px;\n font-size: 20px\n`;","import { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/api';\nimport { CastItem, CastInfo} from './Cast.styled';\nimport noImg from '../Image/no-img.jpg';\n\nconst Cast = () => {\n const [cast, setCast] = useState([]);\n const { movieId } = useParams();\n\n const baseURL = 'https://image.tmdb.org/t/p/w200';\n\n useEffect(() => {\n  getMovieCast(movieId)\n  .then(setCast)\n  .catch(error => console.log(error));\n }, [movieId]);\n\n if (cast.length === 0) {\n  return \"We don't have any cast information on this movie.\";\n }\n\n  return (\n     <>\n     <ul>\n      {cast.map(({ profile_path, name, character, id }) => {\n        return (\n          <CastItem key={id}>\n             <img\n                src={profile_path ? `${baseURL}${profile_path}` : noImg}\n                alt=\"\"\n                width=\"200\"\n              />\n              <CastInfo>{name}</CastInfo>\n              <CastInfo>Character: {character}</CastInfo>\n          </CastItem>\n        )\n      })}\n     </ul>\n     </>\n  )\n};\n\nexport default Cast;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: 'd2d971f07eb4244bef9c04c57e6caf75',\n    language: 'en-US',\n};\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`/trending/movie/day`);\n    console.log(response);\n    return response.data.results;\n};\n\nexport const searchMovie = async query => {\n    const response = await axios.get(`/search/movie?query=${query}`);\n    return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n    const response = await axios.get(`/movie/${movieId}`);\n    console.log(response);\n    return response.data;\n   \n};\n\nexport const getMovieCast= async movieId => {\n    const response = await axios.get(`/movie/${movieId}/credits`);\n    return response.data.cast;\n};\n\nexport const getMovieReviews  = async movieId => {\n    const response = await axios.get(`/movie/${movieId}/reviews`);\n    return response.data.results;\n};"],"names":["CastItem","styled","CastInfo","useState","cast","setCast","movieId","useParams","useEffect","getMovieCast","then","catch","error","console","log","length","map","profile_path","name","character","id","src","noImg","alt","width","axios","api_key","language","getTrendingMovies","response","data","results","searchMovie","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}