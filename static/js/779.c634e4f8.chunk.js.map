{"version":3,"file":"static/js/779.c634e4f8.chunk.js","mappings":"mPAGaA,EAAcC,EAAAA,EAAAA,GAAH,gDAIXC,EAAgBD,EAAAA,EAAAA,EAAH,iEAKbE,EAAcF,EAAAA,EAAAA,EAAH,+D,SCoBxB,EA3BgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACfI,KAAKL,GACLM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACN,IAEmB,IAAnBF,EAAQW,OACH,6CAKP,wBACGX,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,UAACpB,EAAD,YACG,UAACE,EAAD,sBAAwBiB,MACxB,SAAChB,EAAD,UAAciB,MAFCF,EADR,KAQlB,C,+LC5BDG,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACpBC,QAAS,mCACTC,SAAU,SAGP,IAAMC,EAAiB,mCAAG,oGACNH,EAAAA,EAAAA,IAAA,uBADM,cACvBI,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qDAKjBC,EAAW,mCAAG,WAAMC,GAAN,uFACAR,EAAAA,EAAAA,IAAA,8BAAiCQ,IADjC,cACjBJ,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,sDAKXG,EAAe,mCAAG,WAAMvB,GAAN,uFACJc,EAAAA,EAAAA,IAAA,iBAAoBd,IADhB,cACrBkB,EADqB,OAE3BX,QAAQC,IAAIU,GAFe,kBAGpBA,EAASC,MAHW,2CAAH,sDAOfK,EAAY,mCAAE,WAAMxB,GAAN,uFACAc,EAAAA,EAAAA,IAAA,iBAAoBd,EAApB,aADA,cACjBkB,EADiB,yBAEhBA,EAASC,KAAKM,MAFE,2CAAF,sDAKZtB,EAAe,mCAAI,WAAMH,GAAN,uFACLc,EAAAA,EAAAA,IAAA,iBAAoBd,EAApB,aADK,cACtBkB,EADsB,yBAErBA,EAASC,KAAKC,SAFO,2CAAJ,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\n\nexport const ReviewsItem = styled.li`\n margin-bottom: 30px;;\n`;\n\nexport const ReviewsAuthor = styled.p`\n  margin-top: 10px;\n  font-size: 15px;\n`;\n\nexport const ReviewsText = styled.p`\n font-size: 18px;\n font-weight: 500;\n`","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\nimport { ReviewsItem,  ReviewsAuthor, ReviewsText} from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n    .then(setReviews)\n    .catch(error => console.log(error))\n  }, [movieId]);\n\n  if (reviews.length === 0) {\n    return \"We don't have any reviews for this movie.\";\n  }\n\n\n  return (\n    <ul>\n      {reviews.map(({ id, author, content }) => (\n         <ReviewsItem key={id}>\n            <ReviewsAuthor>Author: {author}</ReviewsAuthor>\n            <ReviewsText>{content}</ReviewsText>\n         </ReviewsItem>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: 'd2d971f07eb4244bef9c04c57e6caf75',\n    language: 'en-US',\n};\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`/trending/movie/day`);\n    return response.data.results;\n};\n\nexport const searchMovie = async query => {\n    const response = await axios.get(`/search/movie?query=${query}`);\n    return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n    const response = await axios.get(`/movie/${movieId}`);\n    console.log(response);\n    return response.data;\n   \n};\n\nexport const getMovieCast= async movieId => {\n    const response = await axios.get(`/movie/${movieId}/credits`);\n    return response.data.cast;\n};\n\nexport const getMovieReviews  = async movieId => {\n    const response = await axios.get(`/movie/${movieId}/reviews`);\n    return response.data.results;\n};"],"names":["ReviewsItem","styled","ReviewsAuthor","ReviewsText","useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","then","catch","error","console","log","length","map","id","author","content","axios","api_key","language","getTrendingMovies","response","data","results","searchMovie","query","getMovieDetails","getMovieCast","cast"],"sourceRoot":""}