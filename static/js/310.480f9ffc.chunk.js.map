{"version":3,"file":"static/js/310.480f9ffc.chunk.js","mappings":"mNAIaA,EAAqBC,EAAAA,EAAAA,GAAH,+CAIlBC,EAAYD,EAAAA,EAAAA,GAAH,8EAMTE,GAAYF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,8F,SCTRI,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnBC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,SAACR,EAAD,UACKM,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,SAACT,EAAD,WACG,SAACC,EAAD,CAAWS,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA/C,SACII,KAFSD,EADN,KASvB,C,8KChBYK,EAAgBd,EAAAA,EAAAA,IAAH,+CAIbe,EAAaf,EAAAA,EAAAA,KAAH,yEAIVgB,EAAchB,EAAAA,EAAAA,MAAH,6LAWXiB,EAASjB,EAAAA,EAAAA,OAAH,+M,GAYgBA,EAAAA,EAAAA,GAAH,gDAIPA,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,wKAWIA,EAAAA,EAAAA,GAAH,6E,QCSvB,EA9Ce,WACb,OAA4BkB,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAcF,EAAaG,IAAI,SA6BrC,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,8GAE8BC,EAAAA,EAAAA,IAAYH,GAF1C,OAEUI,EAFV,OAGIV,EAAUU,GAHd,gDAKIC,QAAQC,IAAR,MALJ,0DALc,sBACTN,GADS,mCAadO,EACD,GAAE,CAACP,KAGF,UAACX,EAAD,YACE,UAACC,EAAD,CAAYkB,SAzBK,SAAAC,GACnBA,EAAEC,iBAEFX,EAAgB,CAAEJ,MAAOA,IACzBC,EAAS,GACV,EAoBG,WACE,SAACL,EAAD,CAAaoB,KAAK,OAAOC,MAAOjB,EAAOkB,SA9BxB,SAAAJ,GACnBb,EAASa,EAAEK,cAAcF,MAAMG,cAChC,KA6BK,SAACvB,EAAD,CAAQmB,KAAK,SAAb,yBAGC/B,EAAOoC,SAAU,SAACrC,EAAA,EAAD,CAAWC,OAAQA,MAG5C,C,+LCtDDqC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACpBC,QAAS,mCACTC,SAAU,SAGP,IAAMC,EAAiB,mCAAG,oGACNH,EAAAA,EAAAA,IAAA,uBADM,cACvBI,EADuB,OAE7BhB,QAAQC,IAAIe,GAFiB,kBAGtBA,EAASC,KAAKC,SAHQ,2CAAH,qDAMjBpB,EAAW,mCAAG,WAAMR,GAAN,uFACAsB,EAAAA,EAAAA,IAAA,8BAAiCtB,IADjC,cACjB0B,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,sDAKXC,EAAe,mCAAG,WAAMC,GAAN,uFACJR,EAAAA,EAAAA,IAAA,iBAAoBQ,IADhB,cACrBJ,EADqB,OAE3BhB,QAAQC,IAAIe,GAFe,kBAGpBA,EAASC,MAHW,2CAAH,sDAOfI,EAAY,mCAAE,WAAMD,GAAN,uFACAR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,aADA,cACjBJ,EADiB,yBAEhBA,EAASC,KAAKK,MAFE,2CAAF,sDAKZC,EAAe,mCAAI,WAAMH,GAAN,uFACLR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,aADK,cACtBJ,EADsB,yBAErBA,EAASC,KAAKC,SAFO,2CAAJ,qD","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\n\nexport const MovieListContainer = styled.ul`\n  padding-left: 15px;\n`;\n\nexport const MovieItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const LinkTitle = styled(Link)`\n font-size: 15px;\n color: black;\n\n :hover {\n    color: blue;\n }\n`;","import { useLocation } from \"react-router-dom\";\nimport { MovieListContainer, MovieItem, LinkTitle } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\n\nexport const  MovieList = ({ movies }) => {\n    const location = useLocation();\n\n    return (\n        <MovieListContainer>\n            {movies.map(({ id, original_title }) => (\n              <MovieItem key={id}>\n                 <LinkTitle to={`/movies/${id}`} state={{ from: location }}>\n                    {original_title}\n                 </LinkTitle>\n              </MovieItem>  \n            ))}\n        </MovieListContainer>\n    )\n};\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            original_title: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n};","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesSection = styled.div`\n  padding: 28px 32px;\n`;\n\nexport const MoviesForm = styled.form`\n  display: inline-flex;\n  margin-bottom: 28px;\n`;\nexport const MoviesInput = styled.input`\n  padding: 8px;\n  width: 200px;\n  font-size: 18px;\n  outline: transparent;\n  border: 1px solid #e1d3c1;\n  :hover,\n  :focus {\n    border-color: #b4a89a;\n  }\n`;\nexport const Button = styled.button`\n  width: 70px;\n  height: 40px;\n  font-size: 16px;\n  background-color: #faebd7;\n  border: 1px solid #e1d3c1;\n  :hover {\n    background-color: #c27ba0;\n    color: #ffffff;\n  }\n`;\n\nexport const MoviesListContainer = styled.ul`\n  padding-left: 16px;\n`;\n\nexport const LinkTitle = styled(Link)`\n  text-decoration: underline;\n  color: black;\n  font-weight: 500;\n  font-size: 20px;\n  color: black;\n  :hover {\n    color: #c27ba0;\n  }\n`;\n\nexport const MoviesItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovie } from 'services/api';\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport {\n    MoviesSection,\n    MoviesForm,\n    MoviesInput,\n    Button,\n} from './Movies.styled';\n\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieSearch = searchParams.get('query');\n\n  const handleChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query: query });\n    setQuery('');\n  };\n\n  useEffect(() => {\n    if (!movieSearch) {\n      return;\n    }\n\n    async function renderMovie() {\n      try {\n        const movieResult = await searchMovie(movieSearch);\n        setMovies(movieResult);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    renderMovie();\n  }, [movieSearch]);\n\n  return (\n    <MoviesSection>\n      <MoviesForm onSubmit={handleSubmit}>\n        <MoviesInput type=\"text\" value={query} onChange={handleChange} />\n        <Button type=\"submit\">Search</Button>\n      </MoviesForm>\n\n      {!!movies.length && <MovieList movies={movies} />}\n    </MoviesSection>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: 'd2d971f07eb4244bef9c04c57e6caf75',\n    language: 'en-US',\n};\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`/trending/movie/day`);\n    console.log(response);\n    return response.data.results;\n};\n\nexport const searchMovie = async query => {\n    const response = await axios.get(`/search/movie?query=${query}`);\n    return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n    const response = await axios.get(`/movie/${movieId}`);\n    console.log(response);\n    return response.data;\n   \n};\n\nexport const getMovieCast= async movieId => {\n    const response = await axios.get(`/movie/${movieId}/credits`);\n    return response.data.cast;\n};\n\nexport const getMovieReviews  = async movieId => {\n    const response = await axios.get(`/movie/${movieId}/reviews`);\n    return response.data.results;\n};"],"names":["MovieListContainer","styled","MovieItem","LinkTitle","Link","MovieList","movies","location","useLocation","map","id","original_title","to","state","from","MoviesSection","MoviesForm","MoviesInput","Button","useState","setMovies","query","setQuery","useSearchParams","searchParams","setSearchParams","movieSearch","get","useEffect","searchMovie","movieResult","console","log","renderMovie","onSubmit","e","preventDefault","type","value","onChange","currentTarget","toLowerCase","length","axios","api_key","language","getTrendingMovies","response","data","results","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}